<?php

use Drupal\Core\Cache\Cache;
use Drupal\Core\Form\FormStateInterface;
use Drupal\taxonomy\Entity\Term;

/**
 * Implements hook_theme().
 */
function ivw_integration_theme() {
  return array(
    'ivw_tag' => array(
      'variables' => array(
        'st' => NULL,
        'cp' => NULL,
        'cpm' => NULL,
        'sv' => NULL
      ),
    ),
    'ivw_call' => array(
      'variables' => array(),
      'template' => 'ivw-call',
    ),
  );
}

/**
 * Implements hook_form_BASE_FORM_ID_alter() for node_form().
 */
function ivw_integration_form_node_form_alter(&$form, FormStateInterface $form_state) {
  /* Is there a better way to get the node? */
  $entity = $form_state->getBuildInfo()['callback_object']->getEntity();
  $has_settings = FALSE;

  /**
   * Set group of all ivw_integration_settings elements
   */
  foreach ($entity->getFieldDefinitions() as $fieldDefinition) {
    if ($fieldDefinition->getType() === 'ivw_integration_settings') {
      $has_settings = TRUE;
      $form[$fieldDefinition->getName()]['#group'] = 'ivw_integration_settings_override';
    }
  }
  if ($has_settings) {
    if (isset($form['advanced'])) {
      $form['advanced'] = array(
        '#type' => 'vertical_tabs',
        '#weight' => 99,
      );
    }
    $form['ivw_integration_settings_override'] = array(
      '#type' => 'details',
      '#title' => t('IVW settings'),
      '#open' => FALSE,
      '#group' => 'advanced',
      '#optional' => TRUE,
    );
  }
}

/**
 * Implements hook_form_BASE_FORM_ID_alter() for node_form().
 */
function ivw_integration_form_taxonomy_term_form_alter(&$form, FormStateInterface $form_state) {
  ivw_integration_form_node_form_alter($form, $form_state);
}

/**
 * Implements hook_page_attachments().
 */
function ivw_integration_page_attachments(array &$page) {
  $trackerService = \Drupal::service('ivw_integration.tracker');
  $config = \Drupal::config('ivw_integration.settings');
  $tracker = $trackerService->getTrackingInformation();
  // site value is missing, do not render tag
  if (empty($tracker['st'])) {
    return;
  }

  $page['#cache']['tags'] = Cache::mergeTags(isset($page['#cache']['tags']) ? $page['#cache']['tags'] : [], $trackerService->getCacheTags());

  $page['#attached']['html_head'][] = [
    [
      '#tag' => 'script',
      '#attributes' => [
        'src' => 'https://script.ioam.de/iam.js'
      ],
    ],
    'ivw_library'
  ];

  $mobile_width = $config->get("mobile_width") ? 'var ivw_mobile_width = ' . $config->get("mobile_width")  : '';
  $mobile_site = $config->get("mobile_site") ? 'var ivw_mobile_site = "' . $config->get("mobile_site") . '"' : '';
  $page['#attached']['html_head'][] = [
    [
      '#tag' => 'script',
      '#attributes' => [
        'type' => 'text/javascript'
      ],
      '#value' => 'var iam_data = {
                  "st": "' . $tracker['st'] . '",
                  "cp": "' . $tracker['cp'] . '",
                  "sv": "' . $tracker['sv'] . '",
                  "cpm": "' . $tracker['cpm'] . '"
              };
              var ivw_cpm = "' . $tracker['cpm'] . '";
              ' . $mobile_width . ';
              ' . $mobile_site . ';',
    ],
    'ivw_call'
  ];

  $page['#attached']['library'][] = 'ivw_integration/ivw_call';
}

function get_overridden_ivw_setting($name, $fieldDefinition, $entity) {
  if ($fieldDefinition->getType() === 'ivw_integration_settings') {
    $fieldName = $fieldDefinition->getName();
    if (!empty($entity->$fieldName->get(0)->$name)) {
      return $entity->$fieldName->get(0)->$name;
    }
  }
}

function get_overridden_ivw_setting_from_term($name, Term $term) {
  foreach ($term->getFieldDefinitions() as $fieldDefinition) {
    $override = get_overridden_ivw_setting($name, $fieldDefinition, $term);
    if (isset($override)) {
      return $override;
    }
  }

  foreach (\Drupal::entityManager()->getStorage('taxonomy_term')->loadParents($term->id()) as $parent) {
    $override =  get_overridden_ivw_setting_from_term($name, $parent);
    if (isset($override)) {
      return $override;
    }
  }
}
